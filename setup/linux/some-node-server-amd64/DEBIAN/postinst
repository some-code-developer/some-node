#!/bin/sh
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

OUT=/dev/null
PRODUCT=some-node

case "$1" in
    configure)
        if ! getent passwd some-node > $OUT; then
            echo "Creating some-node system user & group..."
            adduser --quiet --system --home /run/some-code.com/$PRODUCT \
                --disabled-password --group \
                --gecos "some-code.com system user" \
                some-node > $OUT
        fi
        echo "Updating access rights..."
        chown -R some-node:some-node \
            /opt/some-code.com/$PRODUCT \
            /etc/some-code.com/$PRODUCT \
            /var/log/some-code.com/$PRODUCT \
            /var/lib/some-code.com/$PRODUCT \

        chmod -R 755 /opt/some-code.com/$PRODUCT
        chmod -R 777 /etc/some-code.com/$PRODUCT
        chmod -R 777 /var/log/some-code.com/$PRODUCT
        chmod -R 777 /var/lib/some-code.com/$PRODUCT
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
